name: Build Windows Executable

on:
  push:
    branches: [ root ]
  pull_request:
    branches: [ root ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload hellextractor Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: hellextractor
        path: ${{github.workspace}}/build/Release/Hellextractor.exe
        if-no-files-found: error # Optional: 'warn', 'error', 'ignore'
      
    - name: Generate Release Name, Tag, and Notes
      id: release_info
      run: |
        $dateTag = Get-Date -Format "yyyyMMddHHmmss"
        $dateName = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        echo "RELEASE_TAG=$dateTag" | Out-String | Foreach-Object {echo "##[set-output name=tag;]$_"}
        echo "RELEASE_NAME=Release-$dateName" | Out-String | Foreach-Object {echo "##[set-output name=name;]$_"}
        $commitMessages = git log -5 --pretty=format:"%h - %s"
        echo "RELEASE_NOTES=Recent changes:`n$commitMessages" | Out-String | Foreach-Object {echo "##[set-output name=notes;]$_"}
      shell: pwsh
    

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_info.outputs.tag }}
        release_name: ${{ steps.release_info.outputs.name }}
        body: ${{ steps.release_info.outputs.notes }}
        files: |
          build/Release/Hellextractor.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}