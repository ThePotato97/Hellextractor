name: Build Windows Executable

on:
  push:
    branches: [ root ]
  pull_request:
    branches: [ root ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 5

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Make archive
      run: |
        mkdir -p ${{github.workspace}}/package
        cp ${{github.workspace}}/build/Release/Hellextractor.exe ${{github.workspace}}/package
        cp ${{github.workspace}}/types.txt ${{github.workspace}}/package
        cp ${{github.workspace}}/files.txt ${{github.workspace}}/package
        cp ${{github.workspace}}/strings.txt ${{github.workspace}}/package
        cp ${{github.workspace}}/README.adoc ${{github.workspace}}/package
        cp ${{github.workspace}}/LICENSE.adoc ${{github.workspace}}/package
        zip -r ${{github.workspace}}/hellextractor.zip ${{github.workspace}}/package/*
      shell: bash
    

    - name: Upload hellextractor Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: hellextractor
        path: ${{github.workspace}}/hellextractor.zip
        if-no-files-found: error # Optional: 'warn', 'error', 'ignore'
      
    - name: Generate Release Name, Tag, and Notes
      id: release_info
      run: |
          echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          
          dateName=$(date +'%Y-%m-%d %H:%M:%S')
          echo "dateName=$dateName" # for debugging
          echo "name=Release-$dateName" >> $GITHUB_OUTPUT
      
          commitMessages=$(git log -5 --pretty=format:"%h - %s <br />" | paste -sd ' ' -)
          echo "commitMessages=$commitMessages" # for debugging
          releaseNotes="Recent changes: <br />$commitMessages"
          echo "notes=$releaseNotes" >> $GITHUB_OUTPUT            
      shell: bash  
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_info.outputs.tag }}
        name: ${{ steps.release_info.outputs.name }}
        body: ${{ steps.release_info.outputs.notes }}
        files: |
          ${{github.workspace}}/hellextractor.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}